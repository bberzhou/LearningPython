#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
	1、正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，
	  凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。
	2、\d可以匹配一个数字，\w可以匹配一个字母或数字， .可以匹配任意字符
	   '00\d'可以匹配'007'，但无法匹配'00A'；
	   '\d\d\d'可以匹配'010'；
	   '\w\w\d'可以匹配'py3'；
	   'py.'可以匹配'pyc'、'pyo'、'py!'
	3、举个例子：\d{3}\s+\d{3,8}
		\d，表示匹配数字,{3}，表示三位数字，\s：表示空格,\d{3,8}：表示3-8个数字
		上面的正则表达式可以匹配以任意个空格隔开的带区号的电话号码。

		要匹配变长的字符，在正则表达式中，用*表示任意个字符（包括0个），
		用+表示至少一个字符，用?表示0个或1个字符，用{n}表示n个字符，用{n,m}表示n-m个字符
	进阶：
		要做更精确地匹配，可以用[]表示范围
		[0-9a-zA-Z\_]可以匹配一个数字、字母或者下划线
		[0-9a-zA-Z\_]+可以匹配至少由一个数字、字母或者下划线组成的字符串，比如'a100'，'0_Z'，'Py3000'等等
		[a-zA-Z\_][0-9a-zA-Z\_]*可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量
		[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）

		A|B可以匹配A或B，所以(P|p)ython可以匹配'Python'或者'python'

		^表示行的开头，^\d表示必须以数字开头。
		$表示行的结束，\d$表示必须以数字结束

		由于正则表达式和 \ 会有冲突，因此，当一个字符串使用了正则表达式后，最好在前面加上'r'
		如果字符串里面有很多字符都需要转义，就需要加很多\，
		为了简化，Python还允许用r''表示''内部的字符串默认不转义，

	re模块：
		Python提供re模块，包含所有正则表达式的功能。由于Python的字符串本身也用\转义，所以要特别注意


"""